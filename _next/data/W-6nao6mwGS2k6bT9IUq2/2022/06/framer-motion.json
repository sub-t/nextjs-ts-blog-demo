{"pageProps":{"post":{"title":"Framer Motionチートシート","date":"2022-06-02","category":"React.js","tags":["React.js","Framer Motion","Animation Library"],"year":"2022","month":"06","slug":"framer-motion","content":"<h2>Animation</h2>\n<h3>Simple animations</h3>\n<h4>Mount animations</h4>\n<p><code>initial={false}</code>で、デフォルトが<code>animate</code>になる。</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&#x3C;</span>motion<span class=\"token punctuation\">.</span><span class=\"token property-access\">div</span> animate<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> initial<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n</code></pre></div>\n<h4>Keyframes</h4>\n<p>配列で指定することで、keyframesを使える。<code>transition</code>propの<code>times</code>から、タイミングを指定することも可能。</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&#x3C;</span>motion<span class=\"token punctuation\">.</span><span class=\"token property-access\">circle</span>\n  cx<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">500</span><span class=\"token punctuation\">}</span>\n  animate<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">cx</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  transition<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">times</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n</code></pre></div>\n<h3>Variants</h3>\n<h4>Dynamic variants</h4>\n<p><code>custom</code>propに変数を渡すと、<code>variants</code>配下で使用できる。</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> variants <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">visible</span><span class=\"token operator\">:</span> <span class=\"token parameter\">i</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">transition</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> i <span class=\"token operator\">*</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">hidden</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword control-flow\">return</span> items<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&#x3C;</span>motion<span class=\"token punctuation\">.</span><span class=\"token property-access\">li</span>\n    custom<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span>\n    animate<span class=\"token operator\">=</span><span class=\"token string\">\"visible\"</span>\n    variants<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>variants<span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h3>Component animation controls</h3>\n<h4>Sequencing</h4>\n<p><code>start</code>メソッドは<code>Promise</code>を返すので、アニメーションの実行後さらに、別のアニメーションを発火するといったことが可能となる。</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sequence</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">await</span> menuControls<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword control-flow\">await</span> itemControls<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h3>Dynamic <code>start</code></h3>\n<p><code>start</code>メソッドに<code>custom</code>を受け取る関数を渡せば、<code>motion</code>コンポーネントの<code>custom</code>を使用して動的にアニメーションを実行できる。</p>\n<h2>Animate single values</h2>\n<!-- todo -->\n<h2>Layout animations</h2>\n<p><code>layout</code>propを指定すると、レイアウトにかかわる部分のアニメーションが可能となる。</p>\n<h3>Scale correction</h3>\n<p>親子関係がある場合は、親子共々<code>layout</code>propを指定する。</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&#x3C;</span>motion<span class=\"token punctuation\">.</span><span class=\"token property-access\">div</span>\n  layout\n  data<span class=\"token operator\">-</span>isOpen<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>isOpen<span class=\"token punctuation\">}</span>\n  initial<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">borderRadius</span><span class=\"token operator\">:</span> <span class=\"token number\">50</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  className<span class=\"token operator\">=</span><span class=\"token string\">\"parent\"</span>\n  onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">setIsOpen</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isOpen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">></span>\n  <span class=\"token operator\">&#x3C;</span>motion<span class=\"token punctuation\">.</span><span class=\"token property-access\">div</span> layout className<span class=\"token operator\">=</span><span class=\"token string\">\"child\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>motion<span class=\"token punctuation\">.</span><span class=\"token property-access\">div</span><span class=\"token operator\">></span>\n</code></pre></div>\n<h3>Shared layout animations</h3>\n<p>同一の<code>layoutId</code>を持つコンポーネントは、アニメーションを継承する。</p>\n<h2>Transition</h2>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&#x3C;</span>motion<span class=\"token punctuation\">.</span><span class=\"token property-access\">div</span>\n  animate<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  transition<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"spring\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">stiffness</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword module\">default</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n</code></pre></div>\n<h3>Orchestration</h3>\n<ul>\n<li><code>delay</code>: number</li>\n<li><code>delayChildren</code>: number</li>\n<li><code>staggerChildren</code>: number</li>\n<li><code>staggerDirection</code>: 1 | -1</li>\n<li><code>when</code>:\n| 'beforeChildren'\n| 'afterChildren'</li>\n<li><code>repeat</code>: number | 'Infinity'</li>\n<li><code>repeatType</code>\n| 'loop'\n| 'reverse'\n| 'mirror'</li>\n<li><code>repeatDelay</code>: number</li>\n</ul>\n<h2>MotionValue</h2>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token function\">useMotionValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword control-flow\">return</span> <span class=\"token operator\">&#x3C;</span>motion<span class=\"token punctuation\">.</span><span class=\"token property-access\">div</span> drag<span class=\"token operator\">=</span><span class=\"token string\">\"x\"</span> style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> x <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h3>useTransform()</h3>\n<p>: (input, inputRange, outputRange, options)</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> opacity <span class=\"token operator\">=</span> <span class=\"token function\">useTransform</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>: (input, transformer)</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> y <span class=\"token operator\">=</span> <span class=\"token function\">useTransform</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token parameter\">latest</span> <span class=\"token arrow operator\">=></span> latest <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> z <span class=\"token operator\">=</span> <span class=\"token function\">useTransform</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>latestX<span class=\"token punctuation\">,</span> latestY<span class=\"token punctuation\">]</span> <span class=\"token arrow operator\">=></span> latestX <span class=\"token operator\">*</span> latestY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h3>useSpring()</h3>\n<p>: (source, config)</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token function\">useSpring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">stiffness</span><span class=\"token operator\">:</span> <span class=\"token number\">300</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> y <span class=\"token operator\">=</span> <span class=\"token function\">useSpring</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">damping</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h3>useTime()</h3>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> time <span class=\"token operator\">=</span> <span class=\"token function\">useTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rotate <span class=\"token operator\">=</span> <span class=\"token function\">useTransform</span><span class=\"token punctuation\">(</span>\n  time<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// milliseconds</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">360</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2>Utilities</h2>\n<h3>useAnimation()</h3>\n<p><code>AnimationControls</code>を生成する。</p>\n<h3>useCycle()</h3>\n<p>: (items) -> CycleState<T></p>\n<h3>useReducedMotion()</h3>\n","description":"initial={false}で、デフォルトがanimateになる。"}},"__N_SSG":true}