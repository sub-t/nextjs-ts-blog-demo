import { ParsedUrlQuery } from 'querystring';
import type {
  NextPage,
  GetStaticProps,
  GetStaticPaths,
  InferGetStaticPropsType,
} from 'next';
import Head from 'next/head';
import Link from 'next/link';
import { Post } from '@/types';
import { formatDate } from '@/utils/format';
import { getCategories } from '@/utils/getCategories';
import { getPostsByCategory } from '@/utils/getPosts';

type Props = {
  category: string;
  posts: Post[];
};

type Params = ParsedUrlQuery & {
  category: string;
};

const View: NextPage<InferGetStaticPropsType<typeof getStaticProps>> = ({
  category,
  posts,
}: Props) => {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>{category}</h1>
      <ul>
        {posts.map((post) => (
          <li key={post.slug}>
            <Link href={`/${post.year}/${post.month}/${post.slug}`}>
              <a>{post.title}</a>
            </Link>
            <div>{formatDate(post.date)}</div>
          </li>
        ))}
      </ul>
    </>
  );
};

export default View;

export const getStaticProps: GetStaticProps<Props, Params> = async ({
  params,
}) => {
  const { category } = params as Params;

  return {
    props: {
      category,
      posts: getPostsByCategory(category),
    },
  };
};

export const getStaticPaths: GetStaticPaths<Params> = async () => {
  const paths = getCategories().map((category) => ({
    params: { category },
  }));

  return {
    paths,
    fallback: false,
  };
};
